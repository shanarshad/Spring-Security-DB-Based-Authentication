<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<security:http auto-config='true'>		
		<security:intercept-url pattern="/**" access="ROLE_USER, ROLE_ADMIN" />
		<security:http-basic />
	</security:http>
	
	<!-- <security:authentication-manager>
		<security:authentication-provider>
			<security:user-service>
				<security:user name="shani" password="shani123" authorities="ROLE_USER, ROLE_ADMIN" />				
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager> -->
	<security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service data-source-ref="dataSource"
				
				users-by-username-query="
					select username,password, enabled 
					from users where USERNAME=?" 
				
				authorities-by-username-query="
					select u.username, ur.authority from users u, user_roles ur 
					where u.user_id = ur.user_id and u.username =?  " 
					
			/>
		</security:authentication-provider>
	</security:authentication-manager>
</beans>